<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.kiven.pushlibrary">

    <!-- 小米推送 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <!--<permission android:name="com.xiaomi.mipushdemo.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" /> todo 这里com.xiaomi.mipushdemo改成app的包名
    <uses-permission android:name="com.xiaomi.mipushdemo.permission.MIPUSH_RECEIVE" /> todo 这里com.xiaomi.mipushdemo改成app的包名 -->

    <!-- vivo推送 -->
    <!--<uses-permission   android:name="android.permission.INTERNET"/>-->

    <!-- OPPO推送 -->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />

    <!-- 华为 -->
    <queries>
        <intent>
            <action android:name="com.huawei.hms.core.aidlservice" />
        </intent>
    </queries>


    <application>

        <activity
            android:name="ClickNotiActivity"
            android:exported="false">
            <intent-filter>
                <!--firebase采用action启动，服务器又不能设置category, 所以需要一个单独的 intent-filter-->
                <!-- 隐式启动：https://blog.csdn.net/Leo_Liang_jie/article/details/92836838 -->
                <action android:name="com.push.sample.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <!--指定在浏览器中的动作。当 Intent 在浏览器中被引发，都会被指定成 BROWSABLE 种类。 -->
                <!-- 有这个的话，就不能在桌面上显示了 -->
                <category android:name="android.intent.category.BROWSABLE" />
                <data
                    android:host="kiven.test.app"
                    android:path="/main"
                    android:scheme="sample" />
            </intent-filter>
        </activity>


        <service
            android:name=".PushService"
            android:enabled="true"
            android:persistent="true"
            android:process=":pushservice" />
        <!--<service
            android:name=".PushNotificationListenerService"
            android:label="@string/push_notification_listener_service_name"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
            <intent-filter>
                <action android:name="android.service.notification.NotificationListenerService" />
            </intent-filter>
        </service>-->

        <!-- 小米推送 -->
        <!--如果应用targetSdkVersion >= 31，且接入的Android客户端SDK版本为4.9.1及以上, 需配置activity-->
        <activity
            android:name="com.xiaomi.mipush.sdk.NotificationClickedActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"
            android:launchMode="singleInstance"
            android:exported="true"
            android:enabled="true">
        </activity>
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" /> <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name=".mi.MiPushReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>

        <!-- vivo推送 -->
        <!-- vivo推送 -->
        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true" />

        <receiver android:name=".vivo.VivoPushReceiver"
            android:exported="false">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>


        <!-- OPPO推送 -->
        <!-- 兼容Q版本，继承DataMessageCallbackService -->
        <service android:name="com.heytap.msp.push.service.DataMessageCallbackService"
            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE"
            android:exported="true">
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE"/>
                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE"/>
            </intent-filter>
        </service>
        <!-- 兼容Q以下版本，继承 CompatibleDataMessageCallbackService -->
        <service android:name="com.heytap.msp.push.service.CompatibleDataMessageCallbackService"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE"
            android:exported="true">
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE"/>
            </intent-filter>
        </service>



        <!-- 华为推送 -->
        <service
            android:name="com.kiven.pushlibrary.hw.HuaWeiPushService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- firebase -->
        <service
            android:name=".firebase.ClientFirebaseMessagingService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- 禁止firebase自动初始化 -->
        <meta-data
            android:name="firebase_messaging_auto_init_enabled"
            android:value="false" />
        <meta-data
            android:name="firebase_analytics_collection_enabled"
            android:value="false" />

        <!--<meta-data android:name="vivo_push_enable" android:value="true" />
        <meta-data android:name="mi_push_enable" android:value="true" />
        <meta-data android:name="oppo_push_enable" android:value="true" />
        <meta-data android:name="firebase_push_enable" android:value="true" />
        <meta-data android:name="hms_push_enable" android:value="true" />
        <meta-data android:name="default_push_mi_or_firebase_or_none" android:value="mi" />-->

    </application>
</manifest>
