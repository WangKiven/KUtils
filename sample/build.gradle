apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// 华为插件
apply plugin: 'com.huawei.agconnect'
// firebase
apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.ar.sceneform.plugin'
sceneform.asset(
        "sampledata/sceneform_face_mesh.obj",
        "sampledata/sceneform_face_mesh_material.mat",
        "sampledata/sceneform_face_mesh.sfa",
        "src/main/res/raw/sceneform_face_mesh"
)

def lpFile = project.rootProject.file("local.properties")
def inputStream = lpFile.newDataInputStream()
def properties = new Properties()
properties.load(inputStream)

android {

    if (properties.containsKey('store.filePath')) {

        signingConfigs {
            release {
                storeFile file(properties.getProperty('store.filePath'))
                storePassword properties.getProperty('store.filePassword')
                keyAlias properties.getProperty('store.keyAlias')
                keyPassword properties.getProperty('store.keyPassword')
            }
        }
    }

    compileSdkVersion parent.ext.compileSdkVersion
//    buildToolsVersion parent.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.kiven.sample"
//        minSdkVersion 14
//        minSdkVersion 16
//        minSdkVersion 17 // 华为推送要求17
        minSdkVersion 21 // jetpack Compose 要求21
        targetSdkVersion parent.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        buildConfigField("String", "dpkTime", "\"${new Date().format("yyyyMMdd HH:mm:ss")}\"")

        // 配置了两处，下面还有一处配置，以后检测到底是那一次生效，或者说两处同时配置才生效，海豚车测试是另一处生效
        if (properties.containsKey('store.filePath'))
            signingConfig signingConfigs.release
    }
    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 配置了两处，上面还有一处配置，以后检测到底是那一次生效，或者说两处同时配置才生效, 海豚车测试，是这一处生效
            if (properties.containsKey('store.filePath'))
                signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            /*manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs = ['src']
                resources.srcDirs = ['src']
                aidl.srcDirs = ['src']
                renderscript.srcDirs = ['src']
                res.srcDirs = ['res']
                assets.srcDirs = ['assets']*/
//            res.srcDirs = ['src/main/res', 'src/main/res/layout']// 有这句代码的话，布局文件改变，不能实时运行到手机，必须clean project 后运行，才有效果
            jniLibs.srcDirs = ['xunfeiLibs', 'zxingLibs', 'mimcLibs', 'libs', 'tbsLibs', 'miPush', 'oppoPush', 'vivoPush']
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/NOTICE', 'META-INF/license.txt', 'META-INF/notice.txt']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true // 新类型推断算法 (默认启用) https://blog.csdn.net/u011430427/article/details/119921473
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding true
        // Enables Jetpack Compose for this module
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion parent.ext.kotlin_version
    }
}

project.tasks.withType(JavaCompile) { task ->
    options.compilerArgs << "-AguiceAnnotationDatabasePackageName=com.kiven.sample"
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(dir: 'xunfeiLibs', include: ['*.jar', '*.bak'])
    implementation fileTree(dir: 'mimcLibs', include: ['*.jar', '*.bak'])
    implementation fileTree(dir: 'agoraLibs', include: ['*.jar', '*.bak'])

    testImplementation 'junit:junit:4.13.2'
    implementation project(':kutils')
    implementation project(':kutils-ktx')
    implementation project(':pushlibrary')
//    implementation project(':xutils')
    implementation 'com.github.WangKiven:xUtils3:3.9.0-k'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "com.google.android.material:material:1.6.1"
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.8.0'

    // animation & transition
    implementation "androidx.dynamicanimation:dynamicanimation:1.0.0"

    // CameraX core library
    def camerax_version = "1.0.2"
    implementation "androidx.camera:camera-core:$camerax_version"
    // If you want to use Camera2 extensions
//    implementation "androidx.camera:camera-camera2:$camerax_version"

    // ViewModel and LiveData
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'me.grantland:autofittextview:0.2.1'

    implementation 'com.google.code.gson:gson:2.9.0'
    implementation('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.11.0@aar') {
        transitive = true
    }

    //
//    implementation 'com.jcodecraeer:xrecyclerview:1.6.0'
    // https://github.com/WangKiven/FlycoDialog_Master
//    implementation 'com.flyco.dialog:FlycoDialog_Lib:1.3.2@aar'
    implementation 'com.github.WangKiven:FlycoDialog_Master:1.2.9'


    implementation 'com.android.volley:volley:1.2.1'

    // https://github.com/google/flexbox-layout
//    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // https://github.com/koush/AndroidAsync
    implementation 'com.koushikdutta.async:androidasync:2.2.1'
//    compile 'com.koushikdutta.ion:ion:2.2.11' // https://github.com/koush/ion

    // 获取设备正在运行的进程: https://github.com/jaredrummler/AndroidProcesses
    implementation 'com.jaredrummler:android-processes:1.1.1'

    // 二维码 https://github.com/zxing/zxing
    implementation 'com.google.zxing:core:3.3.3'
//    implementation 'com.journeyapps:zxing-android-embedded:3.3.0'
//    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.6'
    // okhttp https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'


//    implementation 'cn.jiguang.imui:messagelist:0.8.0'
//    implementation 'cn.jiguang.imui:chatinput:0.10.0'


    implementation 'com.google.protobuf:protobuf-lite:3.0.0'// 小米即时通讯用到

    implementation 'com.github.bumptech.glide:glide:4.13.0'
    kapt 'com.github.bumptech.glide:compiler:4.13.0'

    // slices
    implementation 'androidx.slice:slice-builders:1.0.0'

    // ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'

//    implementation 'com.jakewharton:butterknife:10.0.0'
//    kapt 'com.jakewharton:butterknife-compiler:10.0.0'

    // 聊天UI库: https://github.com/stfalcon-studio/ChatKit
    // https://github.com/WangKiven/ChatKit
//    implementation 'com.github.stfalcon:chatkit:0.3.3'
    implementation('com.github.stfalcon-studio:Chatkit:v0.4.1') {
        exclude group: 'com.google.android', module: 'flexbox'
    }
//    implementation project(':chatkit')

    // 图表库 MPAndroidChart：https://github.com/PhilJay/MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // google-emoji  https://developer.android.com/jetpack/androidx/releases/emoji2
//    implementation "androidx.emoji:emoji-appcompat:1.1.0"
//    implementation "androidx.emoji:emoji-bundled:1.1.0"
    def emoji2_version = "1.1.0"
    implementation "androidx.emoji2:emoji2:$emoji2_version"
    implementation "androidx.emoji2:emoji2-views:$emoji2_version"
    implementation "androidx.emoji2:emoji2-views-helper:$emoji2_version"
    implementation "androidx.emoji2:emoji2-bundled:$emoji2_version"

    // 图片信息获取修改
    implementation 'androidx.exifinterface:exifinterface:1.3.3'


    // https://github.com/vanniktech/Emoji
    implementation 'com.vanniktech:emoji-ios:0.8.0'
    implementation 'com.vanniktech:emoji-google:0.8.0'
    implementation 'com.vanniktech:emoji-twitter:0.8.0'

    // ARouter: https://github.com/alibaba/ARouter, TODO 需要注意代码混淆和加固的问题, 我们的helper不适用，只能用于activity
    implementation 'com.alibaba:arouter-api:1.5.2'
    kapt 'com.alibaba:arouter-compiler:1.5.2'

    implementation 'androidx.palette:palette-ktx:1.0.0'

    // 华为推送
//    implementation 'com.huawei.hms:push:3.0.3.301'
    // firebase
//    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    implementation 'com.google.firebase:firebase-messaging:23.0.4'
//    implementation 'com.google.firebase:firebase-messaging-directboot:20.2.1'//在直接启动模式下接收 FCM 消息

    // ARCore https://developers.google.cn/ar/develop/java/enable-arcore
    implementation 'com.google.ar:core:1.31.0'
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.17.1'
    implementation 'com.google.ar.sceneform:core:1.17.1'

    // tensorFlow: https://www.tensorflow.org/lite/guide/android?hl=zh_cn
    implementation 'org.tensorflow:tensorflow-lite:2.2.0'

    // https://github.com/ReactiveX/RxJava
//    implementation "io.reactivex.rxjava3:rxjava:3.0.12"
    // https://github.com/ReactiveX/RxAndroid
//    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    // https://github.com/googlearchive/android-nearby
//    implementation 'com.google.android.gms:play-services-nearby:17.0.0'

    // tbs https://x5.tencent.com/tbs/sdk.html
    // 与as的profiler有冲突，使用profiler时进入x5 webView页面，会导致程序崩溃
    implementation 'com.tencent.tbs:tbssdk:44165'
    // gpuimage https://github.com/cats-oss/android-gpuimage
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'
    // https://github.com/koral--/android-gif-drawable
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'
    // https://github.com/chrisbanes/PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    // https://github.com/ronmamo/reflections
//    implementation 'org.reflections:reflections:0.9.12'
    // 图片压缩：https://github.com/zetbaitsu/Compressor
    implementation 'id.zelory:compressor:3.0.1'
    // tiny: https://github.com/WangKiven/Tiny
//    implementation project(":tiny")
    implementation 'com.github.WangKiven.Tiny:tiny:1.0.1'

    // https://square.github.io/leakcanary/getting_started/
    // https://www.jianshu.com/p/a5e69a2e093f
    // 与as的profiler有冲突，使用profiler时会导致程序崩溃
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // https://spring.io/projects/spring-android#learn
//    implementation 'org.springframework.android:spring-android-rest-template:2.0.0.M3'

    // 滴滴的Dokit: https://github.com/didi/DoraemonKit
//    def dokitVersion = "4.2.1"
//    debugImplementation "io.github.didi.dokit:dokitx:${dokitVersion}"
//    releaseImplementation "io.github.didi.dokit:dokitx-no-op:${dokitVersion}"

    // Jetpack Compose  https://developer.android.google.cn/jetpack/compose/interop/adding
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.animation:animation:$compose_version"
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    // 根据主题支持包使用不同的主题适配器，
//    implementation "com.google.android.material:compose-theme-adapter:1.1.5"
//    implementation "com.google.accompanist:accompanist-appcompat-theme:0.16.0"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}
