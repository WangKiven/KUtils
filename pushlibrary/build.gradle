apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

// https://developer.android.com/studio/build/maven-publish-plugin
/*afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.WangKiven.KUtils'
                artifactId = 'pushlibrary'
                version = parent.ext.library_version
            }
        }
    }
}*/
publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.github.WangKiven.KUtils'
            artifactId = 'pushlibrary'
            version = parent.ext.library_version

            afterEvaluate {
                from components.release
            }
        }
    }
}


android {
    namespace 'com.kiven.pushlibrary'
    compileSdk 34
//    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 19 // 华为推送要求17，oppo推送要求19
        targetSdkVersion 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"
    implementation "com.google.android.material:material:1.12.0"
//    compileOnly 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.13.1'


    // okhttp https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'


    implementation project(':kutils')
    implementation project(':kutils-ktx')


    // 华为推送
    implementation 'com.huawei.hms:push:6.11.0.300'

    // 小米推送 https://dev.mi.com/console/doc/detail?pId=2625
//    api fileTree(dir: 'miPush', include: ['*.jar', '*.bak', '*.aar'])
    implementation zipTree('miPush/MiPush_SDK_Client_5_7_8-C_3rd.aar')
//    implementation files('miPush/MiPush_SDK_Client_5_7_8-C_3rd.aar')

    // todo vivo推送,fileTree方式编译时要报错，但是能运行。zipTree仅导入了aar中的jar包。
    //  解压AAR后，查看除了jar有用，其他文件都没用，所有使用zipTree
    //  解压命令：unzip -n vivo_pushsdk-v2.9.0.0.aar -d tmp/
//    implementation fileTree(dir: 'vivoPush', include: ['*.jar', '*.bak', '*.aar'])
    implementation zipTree('vivoPush/vivo_pushSDK_v3.0.0.7_488.aar')
//    implementation files("vivoPush/vivo_pushSDK_v3.0.0.7_488.aar")

    // todo OPPO推送, 文档使用的是 implementation(name: 'push-3.0.0', ext: 'aar')
    //  需要配置 repositories { flatDir { dirs 'libs' } }，但是在这里不适用（这本来是一个SDK，其他应用不方便这样导入）
//    implementation fileTree(dir: 'oppoPush', include: ['*.jar', '*.bak'])
    implementation zipTree('oppoPush/com.heytap.msp_3.1.0.aar')
//    implementation files('oppoPush/com.heytap.msp_3.1.0.aar')
    //以下依赖都需要添加
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'commons-codec:commons-codec:1.15'
//    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'androidx.annotation:annotation:1.7.1'

    // Firebase
    //implementation 'com.google.firebase:firebase-analytics:17.4.4'
    compileOnly 'com.google.firebase:firebase-messaging:23.2.0'
//    compileOnly 'com.google.firebase:firebase-messaging-directboot:20.2.2'//在直接启动模式下接收 FCM 消息
}
